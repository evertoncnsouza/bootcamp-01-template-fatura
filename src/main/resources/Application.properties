spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/fatura
spring.datasource.username=keycloak
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=create-drop

#Feign
host.cartoes.url=${HOST_CARTOES:http://host.docker.internal:8888}

# Nome da Aplicação
spring.application.name=${APPLICATION_NAME:fatura}

# Endereço do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:fatura}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

spring.kafka.topic.transactions=${KAFKA_TOPICS:transacoes}

resultados.quantidade.maxima=10

# Actuator
management.endpoints.web.exposure.include=${ENDPOINTS_ACTUATOR:info,health,prometheus}
management.metrics.tags.aplicacao=${spring.application.name}